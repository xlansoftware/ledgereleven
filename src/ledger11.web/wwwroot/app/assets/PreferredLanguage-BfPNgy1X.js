import{af as m,ag as d,r as g,j as a,B as p,O as b,z as f}from"./index-CNChYK45.js";import{C as j,a as k,b as C,f as x,c as y,d as v,e as S}from"./command-B0AKnjq_.js";import{P as z,a as L,b as P}from"./select-Buj-ugih.js";const M={afr:"Afrikaans",amh:"Amharic",ara:"Arabic",asm:"Assamese",aze:"Azerbaijani",aze_cyrl:"Azerbaijani - Cyrillic",bel:"Belarusian",ben:"Bengali",bod:"Tibetan",bos:"Bosnian",bre:"Breton",bul:"Bulgarian",cat:"Catalan; Valencian",ceb:"Cebuano",ces:"Czech",chi_sim:"Chinese - Simplified",chi_tra:"Chinese - Traditional",chr:"Cherokee",cos:"Corsican",cym:"Welsh",dan:"Danish",deu:"German",dzo:"Dzongkha",ell:"Greek, Modern (1453-)",eng:"English",est:"Estonian",eus:"Basque",fao:"Faroese",fas:"Persian",fil:"Filipino",fin:"Finnish",fra:"French",fry:"Western Frisian",gla:"Scottish Gaelic",gle:"Irish",glg:"Galician",guj:"Gujarati",hat:"Haitian; Haitian Creole",heb:"Hebrew",hin:"Hindi",hrv:"Croatian",hun:"Hungarian",hye:"Armenian",iku:"Inuktitut",ind:"Indonesian",isl:"Icelandic",ita:"Italian",jav:"Javanese",jpn:"Japanese",kan:"Kannada",kat:"Georgian",kaz:"Kazakh",khm:"Central Khmer",kir:"Kirghiz; Kyrgyz",kmr:"Kurmanji (Kurdish - Latin Script)",kor:"Korean",kor_vert:"Korean (vertical)",lao:"Lao",lav:"Latvian",lit:"Lithuanian",ltz:"Luxembourgish",mal:"Malayalam",mar:"Marathi",mkd:"Macedonian",mlt:"Maltese",mon:"Mongolian",mri:"Maori",msa:"Malay",mya:"Burmese",nep:"Nepali",nld:"Dutch; Flemish",nor:"Norwegian",ori:"Oriya",pan:"Panjabi; Punjabi",pol:"Polish",por:"Portuguese",pus:"Pushto; Pashto",que:"Quechua",ron:"Romanian; Moldavian; Moldovan",rus:"Russian",sin:"Sinhala; Sinhalese",slk:"Slovak",slv:"Slovenian",snd:"Sindhi",spa:"Spanish; Castilian",sqi:"Albanian",srp:"Serbian",srp_latn:"Serbian - Latin",sun:"Sundanese",swa:"Swahili",swe:"Swedish",tam:"Tamil",tat:"Tatar",tel:"Telugu",tgk:"Tajik",tha:"Thai",tir:"Tigrinya",tur:"Turkish",uig:"Uighur; Uyghur",ukr:"Ukrainian",urd:"Urdu",uzb:"Uzbek",uzb_cyrl:"Uzbek - Cyrillic",vie:"Vietnamese",yid:"Yiddish",yor:"Yoruba"},u=Object.entries(M).map(([e,n])=>({code:e,name:n})).sort((e,n)=>e.name.localeCompare(n.name)),R=m()(d((e,n)=>({preferredReceiptLanguage:"eng",setPreferredReceiptLanguage:s=>e({preferredReceiptLanguage:s}),getPreferredReceiptLanguage:()=>n().preferredReceiptLanguage}),{name:"expense-tracker-settings"}));function K({id:e,disabled:n}){var l;const{getPreferredReceiptLanguage:s,setPreferredReceiptLanguage:h}=R(),r=s(),[t,o]=g.useState(!1);return a.jsxs(z,{open:t,onOpenChange:o,children:[a.jsx(L,{asChild:!0,children:a.jsxs(p,{id:e,variant:"outline",role:"combobox","aria-expanded":t,className:"w-[200px] justify-between",disabled:n,children:[r?(l=u.find(i=>i.code===r))==null?void 0:l.name:"Select language...",a.jsx(j,{className:"opacity-50"})]})}),a.jsx(P,{className:"w-[200px] p-0",children:a.jsxs(k,{children:[a.jsx(C,{placeholder:"Search framework...",className:"h-9"}),a.jsxs(x,{children:[a.jsx(y,{children:"No framework found."}),a.jsx(v,{children:u.map(i=>a.jsxs(S,{value:i.code,onSelect:c=>{h(c===r?"":c),o(!1)},children:[i.name,a.jsx(b,{className:f("ml-auto",r===i.code?"opacity-100":"opacity-0")})]},i.code))})]})]})})]})}export{K as P};
